// Generated by view binder compiler. Do not edit!
package com.example.EpicDoodles.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.EpicDoodles.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InventoryItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnWDelete;

  @NonNull
  public final Button btnWEdit;

  @NonNull
  public final TextView pdescriptiontext;

  @NonNull
  public final CircleImageView pimg;

  @NonNull
  public final TextView pnametext;

  @NonNull
  public final TextView ptypetext;

  @NonNull
  public final TextView quantitytext;

  private InventoryItemBinding(@NonNull CardView rootView, @NonNull Button btnWDelete,
      @NonNull Button btnWEdit, @NonNull TextView pdescriptiontext, @NonNull CircleImageView pimg,
      @NonNull TextView pnametext, @NonNull TextView ptypetext, @NonNull TextView quantitytext) {
    this.rootView = rootView;
    this.btnWDelete = btnWDelete;
    this.btnWEdit = btnWEdit;
    this.pdescriptiontext = pdescriptiontext;
    this.pimg = pimg;
    this.pnametext = pnametext;
    this.ptypetext = ptypetext;
    this.quantitytext = quantitytext;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static InventoryItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InventoryItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.inventory_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InventoryItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnWDelete;
      Button btnWDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnWDelete == null) {
        break missingId;
      }

      id = R.id.btnWEdit;
      Button btnWEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnWEdit == null) {
        break missingId;
      }

      id = R.id.pdescriptiontext;
      TextView pdescriptiontext = ViewBindings.findChildViewById(rootView, id);
      if (pdescriptiontext == null) {
        break missingId;
      }

      id = R.id.pimg;
      CircleImageView pimg = ViewBindings.findChildViewById(rootView, id);
      if (pimg == null) {
        break missingId;
      }

      id = R.id.pnametext;
      TextView pnametext = ViewBindings.findChildViewById(rootView, id);
      if (pnametext == null) {
        break missingId;
      }

      id = R.id.ptypetext;
      TextView ptypetext = ViewBindings.findChildViewById(rootView, id);
      if (ptypetext == null) {
        break missingId;
      }

      id = R.id.quantitytext;
      TextView quantitytext = ViewBindings.findChildViewById(rootView, id);
      if (quantitytext == null) {
        break missingId;
      }

      return new InventoryItemBinding((CardView) rootView, btnWDelete, btnWEdit, pdescriptiontext,
          pimg, pnametext, ptypetext, quantitytext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
