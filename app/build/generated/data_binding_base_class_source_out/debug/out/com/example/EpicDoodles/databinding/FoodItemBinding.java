// Generated by view binder compiler. Do not edit!
package com.example.EpicDoodles.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.EpicDoodles.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FoodItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnEdit;

  @NonNull
  public final TextView descriptiontext;

  @NonNull
  public final CircleImageView img;

  @NonNull
  public final TextView nametext;

  @NonNull
  public final TextView pricetext;

  @NonNull
  public final TextView typetext;

  private FoodItemBinding(@NonNull CardView rootView, @NonNull Button btnDelete,
      @NonNull Button btnEdit, @NonNull TextView descriptiontext, @NonNull CircleImageView img,
      @NonNull TextView nametext, @NonNull TextView pricetext, @NonNull TextView typetext) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.descriptiontext = descriptiontext;
    this.img = img;
    this.nametext = nametext;
    this.pricetext = pricetext;
    this.typetext = typetext;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static FoodItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FoodItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.food_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FoodItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      Button btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.descriptiontext;
      TextView descriptiontext = ViewBindings.findChildViewById(rootView, id);
      if (descriptiontext == null) {
        break missingId;
      }

      id = R.id.img;
      CircleImageView img = ViewBindings.findChildViewById(rootView, id);
      if (img == null) {
        break missingId;
      }

      id = R.id.nametext;
      TextView nametext = ViewBindings.findChildViewById(rootView, id);
      if (nametext == null) {
        break missingId;
      }

      id = R.id.pricetext;
      TextView pricetext = ViewBindings.findChildViewById(rootView, id);
      if (pricetext == null) {
        break missingId;
      }

      id = R.id.typetext;
      TextView typetext = ViewBindings.findChildViewById(rootView, id);
      if (typetext == null) {
        break missingId;
      }

      return new FoodItemBinding((CardView) rootView, btnDelete, btnEdit, descriptiontext, img,
          nametext, pricetext, typetext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
